\documentclass{article}
\usepackage[sc]{mathpazo}
\usepackage[T1]{fontenc}
\usepackage{geometry}
\geometry{verbose,tmargin=2.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2.5cm}
\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{2}
\usepackage{datetime}
\usepackage{url}
\usepackage[unicode=true,pdfusetitle,
 bookmarks=true,bookmarksnumbered=true,bookmarksopen=true,bookmarksopenlevel=2,
 breaklinks=false,pdfborder={0 0 1},backref=false,colorlinks=false]
 {hyperref}
\hypersetup{
 pdfstartview={XYZ null null 1}}
\begin{document}
<<setup, include=FALSE, cache=FALSE>>=
library(knitr)
# set global chunk options
opts_chunk$set(fig.path='figure/minimal-', fig.align='center', fig.show='hold')
options(formatR.arrow=TRUE,width=90)
@

\date{\currenttime, \today}
\title{SmartFly: Prepare Data For Modeling}
\author{Cindy Lamm}

\maketitle

Load preprocessed data from the previous step "Exploratory Analysis For Historic Flight Data"
<<load-typed-data>>=
rm(list=ls())   #clear memory
load("../01_exploratory_data_analysis/trainDataTyped.Rdata")
modelData <- trainDataTyped
rm(trainDataTyped)
@

\section{Analyse \& deal with missing values}

<<analyse-cancellations, include=FALSE>>=
unclear_status <- sum(!modelData$cancelled & !is.na(modelData$cancellation_code))
@

The variable \verb+cancellation_code+ has the most missing values since it is only filled if the flight was not cancelled - which is the case for most flights.
I would expect that all non-cancelled flights don't have a \verb+cancellation_code+, however I found \Sexpr{unclear_status} non-cancelled flights that do have an entry as \verb+cancellation_code+. 
<<analyse-weird-obs>>=
weirdIdx <- which(!modelData$cancelled & !is.na(modelData$cancellation_code))
summary(modelData[weirdIdx,])
@
A quick analysis of the concerned observations reveals that all but one have a \verb+taxi_time_in+ of 0 minutes.

I'll exclude those observations from the data set in the following.
<<remove-weird-obs, echo=1>>=
modelData <- modelData[-weirdIdx,]
nbRows <- dim(modelData)[1]
@

The variable \verb+tail_number+ includes the values "000000" and "0" which are according to Wikipedia\footnote{\url{http://en.wikipedia.org/wiki/Aircraft_registration}} not valid registration numbers. However the value "0" appears as well in the scheduled flight data set, so I only mark the values "000000" as \verb+NA+.

<<tail-number-na>>=
is_invalid <- modelData$tail_number == "000000"
sum(is_invalid, na.rm=TRUE)
naIdx <- which(is_invalid)
modelData$tail_number[naIdx] <- NA
@

Before I do an analysis of how many rows contain any missing values, I remove the variables that I won't use for estimating the model. I exclude the variable \verb+id+ because I assume it is randomly assigned to the observation and has no predictive power regarding the delay of a flight.
Furthermore I exlcude the variables \verb+departure_delay+, \verb+taxi_time_in+, \verb+taxi_time_out+, \verb+cancelled+, \verb+cancellation_code+ because they are not available in the scheduled flight data.

<<remove-no-helping-variables>>=
nonAvailable <- c("id", "departure_delay", "taxi_time_in", "taxi_time_out", 
                  "cancelled", "cancellation_code")
excludeIdx <- sapply(nonAvailable, FUN=function(v, x){ which(v==x)}, v=names(modelData))
modelData <- modelData[,-excludeIdx]
str(modelData)
@


<<check-na-removal, include=FALSE>>=
rowHasNa <- apply(modelData, MARGIN=1, FUN=function(row){ any(is.na(row)) })
nbRowsWithNa <- sum(rowHasNa)
nbRowsLeft <- nbRows - nbRowsWithNa
# proportion of NA rows:
nbRowsWithNa / nbRows
@

Often observations with any missing value are excluded from the modeling stage. 
There would be \Sexpr{nbRowsLeft} observations left if I would exclude observations that have \verb+NA+ for any of the variables (excluding \verb+cancellation_code+).
Since most modeling algorithms can't deal with non available values anyway and there is such a vast amount of training data without \verb+NA+ values left I remove the \Sexpr{nbRowsWithNa} rows with \verb+NA+s from the data.

<<remove-na-rows>>=
modelData <- modelData[-which(rowHasNa),]
@

Since I will use the \verb+randomForest+\footnote{\url{http://www.stat.berkeley.edu/~breiman/RandomForests/cc_manual.htm}} package I also remove the factor variables that have more than 53 levels since otherwise an error occurs.
<<remaining-factors>>=
modelFactorIdx <- which(sapply(modelData, FUN=class) == "factor")
modelFactorLevels <- sapply(modelData, FUN=levels)
nbLevels <- sapply(modelFactorLevels, FUN=length)
suitable <- which(nbLevels < 53) # condition for this randomForest implementation
rfModelData <- modelData[,suitable]
@

So the data that I use for the estimation of a random forest looks as follows:
<<final-model-data>>=
str(rfModelData)
@

I save it to use in the next step:
<<save-rf-model-data>>=
save(rfModelData, file="../03_train_model/rfModelData.RData")
@


\end{document}

% create the prepare_data.tex with
% knit("../02_prepare_data_for_modeling/prepare_data_for_modeling.Rnw", output="../02_prepare_data_for_modeling/prepare_data_for_modeling.tex")