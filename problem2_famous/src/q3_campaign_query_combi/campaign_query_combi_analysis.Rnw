\documentclass{article}
\usepackage[sc]{mathpazo}
\usepackage[T1]{fontenc}
\usepackage{geometry}
\geometry{verbose,tmargin=2.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2.5cm}
\usepackage{fullpage}
\usepackage{pdflscape}
\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{2}
\usepackage{datetime}
\usepackage{url}
\usepackage[unicode=true,pdfusetitle,
 bookmarks=true,bookmarksnumbered=true,bookmarksopen=true,bookmarksopenlevel=2,
 breaklinks=false,pdfborder={0 0 1},backref=false,colorlinks=false]
 {hyperref}
\hypersetup{
 pdfstartview={XYZ null null 1}}
\begin{document}
\flushbottom

<<setup, include=FALSE, cache=FALSE>>=
rm(list=ls())   #clear memory
library(knitr)
library(plyr)
library(doMC)
# set global chunk options
opts_chunk$set(fig.path='figure/', fig.align='center', fig.show='hold')
options(formatR.arrow=TRUE,width=90)
@

\date{\currenttime, \today}
\title{Almost Famous: Analyse campaign query combinations}
\author{Cindy Lamm}

\maketitle

% ------------------------
% ------------------------ define functions
% ------------------------

<<define-aggregate-campain-query, include=FALSE>>=
library(plyr)
library(doMC)
registerDoMC(cores=detectCores())
aggregatePerCQ <- function(df) {
   aggCQ <- ddply(df, .(campaign, query), summarise,
                  nb_visits=length(unique(visit_id)),
                  nb_uids=length(unique(uid)),
                  .parallel=TRUE)
                  # note: action!=landed is only defined if not query/campaign
   return(aggCQ)
}
@

% ------------------------
% ------------------------ web analysis starts here
% ------------------------

Load variable names and types:
<<load-meta-data>>=
nameTypeDataFile  <- "../../data/raw_variables.csv"
variableNames <- read.csv(nameTypeDataFile, header=TRUE, stringsAsFactors=FALSE) 
variableNames
factorIdx <- which(variableNames$type=="factor")
factorNames <- variableNames$name[factorIdx]
@

Read the per visit aggregated web log data:
<<read-web-data>>=
webFile <- "../../data/web_visits.csv"
visitData <- read.csv(webFile, stringsAsFactors=FALSE, col.names=variableNames$name, 
                    colClasses=variableNames$type, na.strings=c("NA",""))
visitData$tstamp <- as.POSIXct(visitData$tstamp)
str(visitData)
@

<<summary-visit-data>>=
summary(visitData)
@


How many visits are there per campaign-query combination?
<<visits-per-campaign-query>>=
combinations <- expand.grid(queries=levels(visitData$query), campaigns=levels(visitData$campaign))
webAggCampaignQuery <- aggregatePerCQ(visitData)
webAggCampaignQuery
@


\end{document}